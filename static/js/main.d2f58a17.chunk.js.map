{"version":3,"sources":["component/todo/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","inputData","setInputData","lists","localStorage","getItem","JSON","parse","getLocalData","items","setItems","isEditItem","setIsEditItem","toggleButton","setToggleButton","addItem","map","curElem","id","name","myNewInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","src","alt","type","placeholder","value","onChange","event","target","onClick","index","item_todo_edited","find","editItem","updateItem","filter","deleteItem","data-sm-link-text","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PA+HeA,EAnHF,WAAO,IAAD,EACmBC,mBAAS,IAD5B,mBACRC,EADQ,KACGC,EADH,OAEWF,mBAVT,WACjB,IAAMG,EAAQC,aAAaC,QAAQ,cACnC,OAAGF,EACQG,KAAKC,MAAMJ,GAEX,GAKwBK,IAFpB,mBAERC,EAFQ,KAEDC,EAFC,OAGqBV,qBAHrB,mBAGRW,EAHQ,KAGIC,EAHJ,OAIwBZ,oBAAS,GAJjC,mBAIRa,EAJQ,KAIKC,EAJL,KAOTC,EAAU,WACZ,GAAId,EAGC,GAAIA,GAAaY,EAClBH,EACID,EAAMO,KAAI,SAACC,GACP,OAAGA,EAAQC,KAAOP,EACP,2BAAIM,GAAX,IAAoBE,KAAKlB,IAEtBgB,MAGff,EAAa,IACbU,EAAc,MACdE,GAAgB,OAEhB,CACA,IAAMM,EAAiB,CACnBF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,KAAMlB,GAEVS,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBlB,EAAa,SArBbsB,MAAM,sBAwDd,OAHAC,qBAAU,WACNrB,aAAasB,QAAQ,aAAapB,KAAKqB,UAAUlB,MACnD,CAACA,IAEC,mCACA,qBAAKmB,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mCACI,qBAAKC,IAAI,oBAAoBC,IAAI,aACjC,+DAEJ,sBAAKF,UAAU,WAAf,UACI,uBAAOG,KAAK,OAAOC,YAAY,YAC/BJ,UAAU,eACVK,MAAOhC,EACPiC,SAAU,SAACC,GAAD,OAASjC,EAAaiC,EAAMC,OAAOH,UAGzCpB,EAAgB,mBAAGe,UAAU,qBAAqBS,QAAStB,IAC1D,mBAAGa,UAAU,qBAAqBS,QAAStB,OAK5C,qBAAKa,UAAU,YAAf,SAEQnB,EAAMO,KAAI,SAACC,GACP,OACI,sBAAKW,UAAU,WAAf,UACA,6BAAKX,EAAQE,OACb,sBAAKS,UAAU,WAAf,UACA,mBAAGA,UAAU,sBACbS,QAAS,kBA1D3B,SAACC,GACf,IAAMC,EAAmB9B,EAAM+B,MAAK,SAACvB,GACjC,OAAOA,EAAQC,KAAOoB,KAE1BpC,EAAaqC,EAAiBpB,MAC9BP,EAAc0B,GACdxB,GAAgB,GAoD6B2B,CAASxB,EAAQC,OAC9B,mBAAGU,UAAU,2BACZS,QAAS,kBAjD3B,SAACC,GAChB,IAAMI,EAAajC,EAAMkC,QAAO,SAAC1B,GAC7B,OAAOA,EAAQC,KAAOoB,KAE1B5B,EAASgC,GA6CsCE,CAAW3B,EAAQC,YANHD,EAAQC,SAc/D,qBAAKU,UAAU,YAAf,SACI,wBAAQA,UAAU,eACjBiB,oBAAkB,aAClBR,QAlDC,WACd3B,EAAS,KA+CG,SAEqB,yDC5G1BoC,EARH,WACV,OACE,mCACC,cAAC,EAAD,OCMUC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d2f58a17.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport './style.css';\r\n\r\n//get  localstorage data\r\nconst getLocalData = ()=>{\r\n    const lists = localStorage.getItem(\"mytodolist\");\r\n    if(lists){\r\n        return JSON.parse(lists);\r\n    }else{\r\n        return [];\r\n    }\r\n}\r\nconst Todo = () => {\r\n    const [inputData, setInputData] = useState(\"\");\r\n    const [items, setItems] = useState(getLocalData());\r\n    const [isEditItem, setIsEditItem] = useState();\r\n    const [toggleButton,setToggleButton] = useState(false);\r\n\r\n    //add items\r\n    const addItem = () =>{\r\n        if(!inputData){\r\n            alert(\"plz fill the data\");\r\n        }\r\n        else if (inputData && toggleButton){\r\n            setItems(\r\n                items.map((curElem)=>{\r\n                    if(curElem.id === isEditItem){\r\n                        return {...curElem, name:inputData};\r\n                    }\r\n                    return curElem;\r\n                })\r\n            )\r\n            setInputData([]);\r\n            setIsEditItem(null);\r\n            setToggleButton(false);\r\n        }\r\n        else{\r\n            const myNewInputData = {\r\n                id: new Date().getTime().toString(),\r\n                name: inputData,\r\n            }\r\n            setItems([...items, myNewInputData]);\r\n            setInputData(\"\");\r\n\r\n        }\r\n    }\r\n     //edit item\r\n\r\n     const editItem = (index) =>{\r\n        const item_todo_edited = items.find((curElem)=>{\r\n            return curElem.id === index;\r\n        })\r\n        setInputData(item_todo_edited.name);\r\n        setIsEditItem(index);\r\n        setToggleButton(true);\r\n    }\r\n\r\n    //delete item\r\n\r\n    const deleteItem = (index) =>{\r\n        const updateItem = items.filter((curElem)=>{\r\n            return curElem.id !== index;\r\n        })\r\n        setItems(updateItem);\r\n    }\r\n\r\n\r\n    //remove all\r\n\r\n    const removeAll = ()=>{\r\n        setItems([]);\r\n    }\r\n    \r\n    //adding to local storage\r\n    useEffect(()=>{\r\n        localStorage.setItem(\"mytodolist\",JSON.stringify(items));\r\n    },[items]);\r\n    return (\r\n        <>\r\n        <div className=\"main-div\">\r\n            <div className=\"child-div\">\r\n                <figure>\r\n                    <img src=\"./images/todo.svg\" alt=\"todologo\" />\r\n                    <figcaption>Add Your List Here</figcaption>\r\n                </figure>\r\n                <div className=\"addItems\">\r\n                    <input type=\"text\" placeholder=\"Add items\"\r\n                    className=\"form-control\"\r\n                    value={inputData}\r\n                    onChange={(event)=>setInputData(event.target.value)}\r\n                    />\r\n                    {\r\n                        toggleButton ? (<i className=\"fa fa-edit add-btn\" onClick={addItem}></i>):\r\n                        (<i className=\"fa fa-plus add-btn\" onClick={addItem}></i>)\r\n                    }\r\n                    \r\n                </div>\r\n                        {/* show  our items */}\r\n                        <div className=\"showItems\">\r\n                            {\r\n                                items.map((curElem)=>{\r\n                                    return(\r\n                                        <div className=\"eachItem\" key={curElem.id}>\r\n                                        <h3>{curElem.name}</h3>\r\n                                        <div className=\"todo-btn\">\r\n                                        <i className=\"far fa-edit add-btn\"\r\n                                        onClick={()=>editItem(curElem.id)}></i>\r\n                                        <i className=\"far fa-trash-alt add-btn\"\r\n                                         onClick={() =>deleteItem(curElem.id)}></i>\r\n                                        </div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                            \r\n                        </div>\r\n                <div className=\"showItems\">\r\n                    <button className=\"btn effect04\"\r\n                     data-sm-link-text=\"Remove All\"\r\n                     onClick={removeAll}><span>Checklist</span></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\nimport Todo from './component/todo/Todo'\n\nconst App = () => {\n  return (\n    <>\n     <Todo /> \n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}